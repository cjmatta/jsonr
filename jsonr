#!/usr/bin/env python
import json
import os
import sys
from optparse import OptionParser
import logging

logging.basicConfig()
logger = logging.getLogger()

def validateJson(jsonfile):
    try:
        line_number = 0
        line_count = sum(1 for line in jsonfile if line.rstrip('\n'))
        with open(jsonfile, 'r') as f:
            print("Checking for valid JSON in %s" % jsonfile)
            for line in f:
                line_number += 1
                try:
                    json.loads(line)
                    sys.stdout.write("\rChecking line %d" % line_number)
                except ValueError, e:
                    logger.warn("JSON load error on line %d of %s" %
                                (line_number, jsonfile))
    
            print("\nDone.")
    except Exception, e:
        raise e


def parseOptions():
    parser = OptionParser()
    parser.add_option("-f", "--file", dest="jsonfile",
                      help="File containing JSON records to validate.")
    (options, args) = parser.parse_args()

    if options.jsonfile is None:
        parser.print_help()
        sys.exit(1)

    return (options, args)

if __name__ == '__main__':
    try:
        (options, args) = parseOptions()
        validateJson(options.jsonfile)
    
    except Exception, e:
        logger.exception(e)
